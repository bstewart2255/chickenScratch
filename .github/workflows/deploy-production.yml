name: Deploy to Production (Render)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '18.x'

jobs:
  test:
    name: Run CI Checks
    uses: ./.github/workflows/ci.yml
    secrets: inherit

  deploy:
    name: Deploy to Render
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:coverage

      - name: Build project
        run: npm run build

      - name: Deploy to Render
        run: |
          echo "üöÄ Deploying to Render..."
          echo "Render will automatically deploy from this push to main branch"
          echo "Make sure your Render service is connected to this repository"
          echo "and configured to deploy from the main branch"
          
          # Render automatically deploys when code is pushed to the connected branch
          # No additional deployment steps needed here
          
          echo "‚úÖ Deployment triggered successfully!"
          echo "Check your Render dashboard for deployment status"

      - name: Wait for deployment
        run: |
          echo "‚è≥ Waiting for Render deployment to complete..."
          echo "This usually takes 2-5 minutes"
          echo "You can monitor progress in your Render dashboard"
          
          # Give Render time to start deployment
          sleep 30

      - name: Verify deployment
        env:
          RENDER_URL: ${{ vars.RENDER_URL }}
        run: |
          if [ -n "$RENDER_URL" ]; then
            echo "üîç Verifying deployment at $RENDER_URL"
            
            # Wait for service to be ready
            for i in {1..10}; do
              if curl -f -s -o /dev/null "$RENDER_URL/health"; then
                echo "‚úÖ Service is responding!"
                break
              fi
              echo "‚è≥ Waiting for service to be ready... (attempt $i/10)"
              sleep 30
            done
            
            # Final health check
            if curl -f -s "$RENDER_URL/health"; then
              echo "‚úÖ Deployment verification successful!"
            else
              echo "‚ùå Service health check failed"
              exit 1
            fi
          else
            echo "‚ö†Ô∏è RENDER_URL not set - skipping verification"
            echo "Set RENDER_URL variable in your repository settings to enable verification"
          fi

  notify:
    name: Deployment Notification
    needs: [deploy]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Send notification
        run: |
          if [[ "${{ needs.deploy.result }}" == "success" ]]; then
            echo "‚úÖ Production deployment successful!"
            echo "Version: ${{ github.sha }}"
            echo "Deployed by: ${{ github.actor }}"
            echo "Check your Render dashboard for the live service"
          else
            echo "‚ùå Production deployment failed!"
            echo "Version: ${{ github.sha }}"
            echo "Failed by: ${{ github.actor }}"
            echo "Check your Render dashboard for error details"
          fi